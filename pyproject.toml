[project]
name = "agent-workflow"
version = "0.1.0"
description = "A modular Python framework for building LLM-based pipelines with various workflow patterns"
readme = "README.md"
requires-python = ">=3.13"
license = { text = "MIT" }
keywords = ["llm", "workflow", "ai", "gemini", "pipeline", "agents"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "google-genai==1.41.0"
]

[project.optional-dependencies]
dev = [
    "pytest==8.4.2",
    "pytest-asyncio==1.2.0",
    "pytest-cov==7.0.0",
    "ruff==0.13.3",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["framework"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v"
# Uncomment below when pytest-cov is installed:
# addopts = "-v --cov=framework --cov-report=term-missing"

[tool.ruff]
line-length = 120
target-version = "py313"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W"]
ignore = ["E501", "N818"]  # Ignore line length and exception naming
